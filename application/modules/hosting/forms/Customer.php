<?phpclass Hosting_Form_Customer extends Zend_Form {    public function init() {        $this->setName('plan');        $firstname = $this->CreateElement('text', 'firstname')                        ->setLabel('Firstname')                        ->setRequired(TRUE)                        ->addValidator('NotEmpty')                        ->addValidator('Alnum', false, array('allowWhiteSpace' => true))                        ->addValidator('StringLength', false, array(0, 256))                        ->addFilter('StringTrim')                        ->addFilter('StripTags');        $lastname = $this->CreateElement('text', 'lastname')                        ->setLabel('Lastname')                        ->setRequired(TRUE)                        ->addValidator('NotEmpty')                        ->addValidator('StringLength', false, array(0, 256))                        ->addValidator('Alnum', false, array('allowWhiteSpace' => true))                        ->addFilter('StringTrim')                        ->addFilter('StripTags');        $email = $this->CreateElement('text', 'email')                        ->setLabel('Email')                        ->setAttrib('class', 'ltr')                        ->setRequired(TRUE)                        ->addValidator('EmailAddress');        $telephone = $this->CreateElement('text', 'telephone')                        ->setLabel('Telephone')                        ->setRequired(true)                        ->setAttrib('class', 'ltr')                        ->addValidator('NotEmpty')                        ->addValidator('Digits');        $mobile = $this->CreateElement('text', 'mobile')                        ->setLabel('Mobile')                        ->setRequired(true)                        ->setAttrib('class', 'ltr')                        ->addValidator('NotEmpty')                        ->addValidator('Digits');        $country = $this->CreateElement('select', 'country')                        ->setLabel('Country')                        ->addMultiOptions(array(                            'IR' => 'Iran'))                        ->setRequired(true)                        ->addValidator('NotEmpty');        $state = $this->CreateElement('select', 'state')                        ->setLabel('State')                        ->addMultiOptions(array(                            'Tehran' => 'Tehran'))                        ->setRequired(true)                        ->addValidator('NotEmpty');        $city = $this->CreateElement('select', 'city')                        ->setLabel('City')                        ->addMultiOptions(array(                            'Tehran' => 'Tehran'))                        ->setRequired(true)                        ->addValidator('NotEmpty');        $address = $this->CreateElement('text', 'address')                        ->setLabel('Address')                        ->setRequired(TRUE)                        ->addValidator('NotEmpty')                        ->addValidator('StringLength', false, array(0, 256))                        ->addValidator('Regex', false, array('/[a-zA-Z0-9_.-]$/'))                        ->addFilter('StringTrim')                        ->addFilter('StripTags')                        ->setDescription('Accept Dot, Dash, Underline, Number and Alphabetic');        $postal_code = $this->CreateElement('text', 'postal_code')                        ->setLabel('Postal code')                        ->setRequired(true)                        ->setAttrib('class', 'ltr')                        ->addValidator('NotEmpty')                        ->addValidator('Digits');        $discount = $this->CreateElement('select', 'discount')                        ->setLabel('Discount')                        ->addMultiOptions(array(                            '0' => '0%'                            , '1' => '1%'                            , '2' => '2%'                            , '5' => '5%'                            , '10' => '10%'                            , '20' => '20%'                            , '30' => '30%'))                        ->setRequired(true)                        ->addValidator('NotEmpty')                        ->setDescription('Unit: percent');        $submit = $this->CreateElement('submit', 'submit')                        ->setLabel('Submit');        $this->addElements(array($firstname, $lastname, $email, $telephone, $mobile, $country, $state, $city, $address, $postal_code, $discount, $submit));    }}